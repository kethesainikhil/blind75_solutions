https://leetcode.com/problems/best-time-to-buy-and-sell-stock

You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.




class Solution {
    public int maxProfit(int[] prices) {
        int leastBuy = Integer.MAX_VALUE;
        int profit = 0;
        int todayProfit = 0;
        for(int i = 0;i<prices.length;i++){
            if(prices[i] < leastBuy){
                leastBuy = prices[i];
            }
            todayProfit = prices[i] - leastBuy;
            if(todayProfit > profit){
                profit = todayProfit;
            }
        }
        return profit;
    }
}


updated Solution 
with 1m/s 99% 

class Solution {
    public int maxProfit(int[] prices) {
        int overallProfit = Integer.MIN_VALUE;
        int todayProfit = Integer.MAX_VALUE;
        for(int i =0;i<prices.length;i++){
            todayProfit = Math.min(todayProfit,prices[i]);
            overallProfit = Math.max(overallProfit,prices[i]-todayProfit);
        }
        return overallProfit;
    }
}
